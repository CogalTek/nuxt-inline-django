events {
	worker_connections 1024;
}

http {
	# Types MIME (assure .mjs => application/javascript)
	include /etc/nginx/mime.types;
	default_type application/octet-stream;
	types {
		application/javascript  js mjs;
		text/css                css;
	}

	# Timeouts convenables en dev
	proxy_read_timeout    300;
	proxy_connect_timeout 300;
	proxy_send_timeout    300;

	# Upstreams des services du docker-compose
	upstream django { server django:8000; }
	upstream nuxt   { server nuxt:3000;   }

	server {
		listen 80;
		server_name localhost;

		# Logs
		# access_log /var/log/nginx/access.log;
		# error_log  /var/log/nginx/error.log;

		# Uploads
		client_max_body_size 100M;

		# ==============================
		# DEV: Nuxt Vite/HMR exact paths
		# ==============================
		# HMR client & ping
		location = /@vite/client {
			proxy_pass http://nuxt;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_set_header Host $host;
			add_header 'Access-Control-Allow-Origin' '*' always;
		}
		location = /__vite_ping {
			proxy_pass http://nuxt;
			proxy_http_version 1.1;
			proxy_set_header Host $host;
			add_header 'Access-Control-Allow-Origin' '*' always;
		}
		# Tout le namespace _nuxt (chunks, entry.mjs, etc.)
		location ^~ /_nuxt/ {
			# En DEV: proxy vers le serveur Nuxt
			# En PROD: ces requêtes tomberont plutôt sur /static/nuxt-inline/_nuxt/ grâce à l’alias ci-dessous
			# On laisse le proxy pour le dev; l’alias statique prend la main via la location ci-dessous
			proxy_pass http://nuxt;
			proxy_http_version 1.1;
			proxy_set_header Host $host;
			add_header 'Access-Control-Allow-Origin' '*' always;
		}

		# ===========================================
		# PROD: assets Nuxt buildés servis en statique
		#  - Copie .output/public/* -> /static/nuxt-inline/
		#  - Les fichiers seront donc sous /static/nuxt-inline/_nuxt/...
		# ===========================================
		# IMPORTANT: ^~ a priorité sur les regex -> sert les vrais fichiers s’ils existent
		location ^~ /static/nuxt-inline/_nuxt/ {
			alias /static/nuxt-inline/_nuxt/;
			try_files $uri =404;
			access_log off;

			# Cache fort pour les assets fingerprintés
			add_header Cache-Control "public, max-age=31536000, immutable";
		}
		# Autres fichiers générés (favicon, robots, etc.)
		location ^~ /static/nuxt-inline/ {
			alias /static/nuxt-inline/;
			try_files $uri =404;
			access_log off;
			add_header Cache-Control "public, max-age=3600";
		}

		# =====================
		# Statics Django (glob)
		# =====================
		location /static/ {
			alias /static/;
			try_files $uri =404;
			expires 1d;
			add_header Cache-Control "public, immutable";
		}

		# ==========================
		# Backend Django (par défaut)
		# ==========================
		location / {
			proxy_pass http://django;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}
	}
}
